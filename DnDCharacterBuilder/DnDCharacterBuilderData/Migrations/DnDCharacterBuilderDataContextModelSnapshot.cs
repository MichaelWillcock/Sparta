// <auto-generated />
using DnDCharacterBuilderData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DnDCharacterBuilderData.Migrations
{
    [DbContext(typeof(DnDCharacterBuilderDataContext))]
    partial class DnDCharacterBuilderDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DnDCharacterBuilderData.Character", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Classes", b =>
                {
                    b.Property<string>("ClassesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArmourProficiencies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HitDice")
                        .HasColumnType("int");

                    b.Property<string>("WeaponProficiencies")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassesId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Levels", b =>
                {
                    b.Property<int>("LevelsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.HasKey("LevelsId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Races", b =>
                {
                    b.Property<string>("RacesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Abilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Languages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryASI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrimaryIncrease")
                        .HasColumnType("int");

                    b.Property<string>("RaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecondaryIncrease")
                        .HasColumnType("int");

                    b.Property<string>("SecondayASI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRaceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RacesId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Race");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.StatLine", b =>
                {
                    b.Property<string>("StatLineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("StatLineId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Character", b =>
                {
                    b.HasOne("DnDCharacterBuilderData.User", null)
                        .WithMany("Characters")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Classes", b =>
                {
                    b.HasOne("DnDCharacterBuilderData.Character", null)
                        .WithMany("Class")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Levels", b =>
                {
                    b.HasOne("DnDCharacterBuilderData.Character", null)
                        .WithMany("Level")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Races", b =>
                {
                    b.HasOne("DnDCharacterBuilderData.Character", null)
                        .WithMany("Race")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.StatLine", b =>
                {
                    b.HasOne("DnDCharacterBuilderData.Character", null)
                        .WithMany("Stats")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.Character", b =>
                {
                    b.Navigation("Class");

                    b.Navigation("Level");

                    b.Navigation("Race");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("DnDCharacterBuilderData.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
